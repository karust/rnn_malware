import json
import os
from shutil import copyfile, move
import glob
import csv


def cls():
    """Clear console"""
    os.system('cls' if os.name=='nt' else 'clear')


def numProcs(reportname):
    """Number of created processes by executable in report"""
    with open(reportname, "rb") as f:
        data = json.load(f)
    numProcesses = len(data["behavior"]["processes"])
    return numProcesses


def sort(leg=True, reportsDir = "./reports/"):
    """
    Sorting legitimate and malicious file reports
    param leg: Should we sort legetimate files or malicious
    reportsDir: reports directory with necessary structure 
    """
    if leg:
        directory = reportsDir + "leg/"
    else:
        directory = reportsDir + "mal/"

    dirFiles = glob.glob(directory+"*.json")
    num, broken = 0, 0

    for i, f in enumerate(dirFiles):
        try:
            if numProcs(f) == 1:
                num += 1
                move(f, directory + "oneproc")   
        except KeyError:
            move(f, directory + "broken/")
            broken += 1
        cls()
        print("Filename: ", f)
        print("Progress: {0}/{1}. One process files: {2}. Broken: {3}".format(i, len(dirFiles), num, broken))
        

def dataStats(reportsDir = "./reports/"):
    """Statistics about number of reports"""
    legMulti = glob.glob(reportsDir+"/leg/*.json")
    legOne = glob.glob(reportsDir+"/leg/oneproc/*.json")
    legBroken = glob.glob(reportsDir+"/leg/broken/*.json")
    
    malMulti = glob.glob(reportsDir+"/mal/*.json")
    malOne = glob.glob(reportsDir+"/mal/oneproc/*.json")
    malBroken = glob.glob(reportsDir+"/mal/broken/*.json")
    
    print("""Legal files:
     Total: {0}, One-proc: {1}, Multi-proc: {2}, Broken: {3} """
     .format(len(legBroken+legMulti+legOne), len(legOne), len(legMulti), len(legBroken)))
    print("""Malicious files:
     Total: {0}, One-proc: {1}, Multi-proc: {2}, Broken: {3} """
     .format(len(malBroken+malMulti+malOne), len(malOne), len(malMulti), len(malBroken)))


def parseReport(report):
    numProcesses = numProcs(report)
    for i in numProcesses:
        apis = []
        statuses = []
        returns = []
        for i, call in enumerate(file["behavior"]["processes"][0]["calls"]):
            #print(call["api"])
            apis.append(call["api"])

            #print(call["status"])
            statuses.append(str(call["status"]))

            #print(call["return_value"])
            returns.append(str(call["return_value"]))
        
        apis = " ".join(apis)
        statuses = " ".join(statuses)
        returns = " ".join(returns)
        yield apis, statuses, returns


def collectDataset(dataFile='data.csv', reportsDir = "./reports/", append=False):
    csvData = [['Malicious', 'API Calls', 'Statuses', 'Returns'],]

    with open(dataFile, 'w') as csvFile:
        writer = csv.writer(csvFile)
        writer.writerows(csvData)
    
    legalFiles = glob.glob(reportsDir+"/leg/oneproc/*.json")
    for f in legalFiles:
        parseReport(f)
        writer.writerows([["0", apis, statuses, returns]])

    maliciousFiles = glob.glob(reportsDir+"/mal/oneproc/*.json")
    for f in maliciousFiles:
        pass
        writer.writerows([["1", apis, statuses, returns]])
    


if __name__ == "__main__":
    #sort(leg=True, reportsDir = "./reports/")
    #sort(leg=False, reportsDir = "./reports/")
    #dataStats()
    
